#!/bin/bash

# Copyright (C) 2024 Steve Jeong <steve@how2flow.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>

set -e

# ftracing script.
# kernel function call stack. run with root permission.
# check kernel config...
# CONFIG_FTRACE=y
# CONFIG_DYNAMIC_FTRACE=y
# CONFIG_FUNCTION_TRACER=y
# CONFIG_FUNCTION_GRAPH_TRACER=y
# CONFIG_IRQSOFF_TRACER=y
# CONFIG_SCHED_TRACER=y
# CONFIG_FUNCTION_PROFILER=y
# ...
# written by Steve Jeong (steve@how2flow.net).

PREFIX=/sys/kernel/debug/tracing
# evnet path
E_IRQ=${PREFIX}/events/irq
E_SCHD=${PREFIX}/events/sched
E_SYS=${PREFIX}/events/syscalls

# EUID
if [ $EUID -ne 0 ]; then
  echo "please run as 'root'"
  exit 1
fi

echo 0 | tee "${PREFIX}/tracing_on"
sleep 1
echo "tracing off"

echo 0 | tee "${PREFIX}/events/enable"
sleep 1
echo "events off"

echo "function" | tee "${PREFIX}/current_tracer"
sleep 1
echo "function tracer enabled"

echo ""
# filter check: $ cat /sys/kernel/debug/tracing/available_filter_functions
read -r -p "Enter the kernel function name to filter(e.g. hrtimer_interrupt): " filter
echo ${filter} | tee "${PREFIX}/set_ftrace_filter"
if [ ! "$?" == 0 ]; then # TODO: Handle exceptions more reliably.
  echo "Invalid Function Filter.."
  exit 1
fi
sleep 1
echo "set_ftrace_filter enabled"

# events
echo 1 | tee "${E_IRQ}/irq_handler_entry/enable"
echo 1 | tee "${E_IRQ}/irq_handler_exit/enable"
echo "event enable"

echo 1 | tee "${PREFIX}/options/func_stack_trace"
echo 1 | tee "${PREFIX}/options/sym-offset"
echo "function stack trace enabled"

echo ""
read -r -p "input trigger cmd(e.g. ls): " cmd
if [ ! "$?" == 0 ]; then
  exit 1
fi
echo "tracing on" # switch echo message for tracing only cmd.
echo 1 | tee "${PREFIX}/tracing_on"

echo "---cmd start---"
echo "set filter: ${filter}"
echo "test command: ${cmd}"
${cmd}
echo "---cmd end---"

echo 0 | tee "${PREFIX}/tracing_on"
echo "tracing off"
echo "tracing info..."
sleep 3

cp "${PREFIX}/trace" .
mv trace trace.log
chmod +r trace.log

# vim: ft=sh ts=2 sw=2 sts=2 et
