#!/bin/bash

# for build various linux kernel (cross-compile).
# this script has to move in kernel's top path.
# written by Steve Jeong (steve@how2flow.net).

set -e

# declare
declare -A CC
CC["arm"]="arm-linux-gnueabi-"
CC["armhf"]="arm-linux-gnueabihf-"
CC["arm64"]="aarch64-linux-gnu-"

REQ=""

help_msg() {
  local msg=""

  case "${1}" in
    arch)
      msg="e.g 'arm64' or 'x86' or ..."
      ;;
    config)
      msg="e.g 'i386_defconfig' or 'oldconfig' or ..."
      ;;
    *)
      ;;
  esac

  echo ""
  echo "[kernel "${1}"]"
  echo "${msg}"
}

request() {
  local key=""
  local tmp=""

  while true
  do
    help_msg "${1}"
    read -r -p "Input "${1}": " tmp

    key=$(find $(pwd -P)/arch -name "${tmp/armhf/arm}" | wc -l)
    [[ ${key} -gt 0 || "${tmp}" == "oldconfig" ]] && break

    echo ""
    echo "[W] Invalid "${1}" argument! There is no "${1}: ""${tmp}""
  done

  REQ="${tmp}"
}

# check kernel root
if [[ ! -d arch || ! -d init ]]; then
  echo "Make sure you are currently in the path of the kernel root!"
  exit 1
fi

# request
request "arch"
ARCH="${REQ/armhf/arm}" && CROSS_COMPILE="${CC[${REQ}]}"

request "config"
CONFIG=${REQ}

# set Target
echo ""
read -r -p "What do you wan't build? (all/dtbs/modules)? [A/d/m]: " TARGET
case ${TARGET} in
  [dD][tT][bB][sS]|[dD])
    TARGET="dtbs"
    ;;
  [mM][oO][dD][uU][lL][eE][sS]|[mM])
    TARGET="modules"
    ;;
  *)
    TARGET="all"
    ;;
esac

# kernel.release
if [[ -f ".scmversion" && ${CONFIG} != "oldconfig" ]]; then
  sed -i 's/.*CONFIG_LOCALVERSION_AUTO.*/CONFIG_LOCALVERSION_AUTO=y/g' arch/${ARCH}/configs/${CONFIG}
fi

# make
echo "make ARCH=${ARCH} ${CONFIG}"
make ARCH="${ARCH}" "${CONFIG}"
echo "make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} ${TARGET} -j$(nproc)"
make ARCH="${ARCH}" CROSS_COMPILE="${CROSS_COMPILE}" "${TARGET}" -j$(nproc)

# vim: ft=sh ts=2 sw=2 sts=2 et
