#!/bin/bash

# for build various linux kernel (cross-compile).
# this script has to move in kernel's top path.
# written by Steve Jeong (steve@how2flow.net).

set -e

# path
TOP_PATH="$(pwd -P)"
OUT_PATH=${TOP_PATH}/out
LOG_PATH=${TOP_PATH}/build_log.txt

help_msg() {
  local msg=""

  case $1 in
    architecture)
      msg="e.g 'arm64' or 'x86' or ..."
      ;;
    config)
      msg="e.g 'i386_defconfig' or 'oldconfig' or ..."
      ;;
    target)
      msg="e.g 'dtbs' or 'modules' or 'vmlinux' or ..."
      ;;
    *)
      ;;
  esac

  echo ${msg}
}

request() {
  echo ""
  echo "[kernel build $1]"
  help_msg $1
  read -r -p "Input $1: " $1
}

# Options
for opt in $@; do
  case ${opt} in
    --pre=*) # Add "-save-temps=objs" in KBUILD_CFLAGS of Makefile.
    PREPROCESS_FILE=${opt#*=}
    echo "preprocess file:${PREPROCESS_FILE}"
    ;;
    *)
    ;;
  esac
done

# Configure
request "architecture"
case ${architecture} in
  arm)
  export ARCH="arm"
  export CROSS_COMPILE="arm-linux-gnueabi-"
  ;;
  armhf)
  export ARCH="arm"
  export CROSS_COMPILE="arm-linux-gnueabihf-"
  ;;
  arm64)
  export ARCH="arm64"
  export CROSS_COMPILE="aarch64-linux-gnu-"
  ;;
  *)
  echo "architecture: Invalid Option"
  ;;
esac

request "config"
CONF_FILE=arch/${ARCH}/configs/${config}

request "target"
if [ ${target} == "all" ]; then
  target=""
fi

# set build path 'out' or root
echo ""
read -r -p "Would you want to separate the result files? [Y/n]: " FLAG_O
case ${FLAG_O} in
  [nN][oO]|[nN])
    OUT_PATH=""
    ;;
  *)
    OUT_PATH="${TOP_PATH}/out"
    ;;
esac

# Build
if [ ! -f ${CONF_FILE} ]; then
  [ ${config} != "oldconfig" ] && \
    echo "Check existing config file or pwd: ROOT path of Linux kernel!" && exit 1
fi

if [ -f ".scmversion" ]; then
  [ ${config} != "oldconfig" ] && \
    sed -i 's/.*CONFIG_LOCALVERSION_AUTO.*/CONFIG_LOCALVERSION_AUTO=y/g' ${CONF_FILE}
fi

make O=${OUT_PATH} ${config}
make ${PREPROCESS_FILE} O=${OUT_PATH} ${target} -j$(nproc) 2>&1 | tee ${LOG_PATH}

# vim: ft=sh ts=2 sw=2 sts=2 et
